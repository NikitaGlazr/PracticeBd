//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Practice.Entity
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class employee
    {
        public employee()
        {
            this.Order = new HashSet<Order>();
            this.useraccount = new HashSet<useraccount>();
        }

        public int employeeid { get; set; }

        [Required]
        [StringLength(50)]
        public string firstname { get; set; }

        [Required]
        [StringLength(50)]
        public string lastname { get; set; }
        [StringLength(50)]
        public string middlename { get; set; }

        [Required]
        public string position { get; set; }

        [Required]
        [StringLength(18)]
        [RegularExpression(@"^\d+$", ErrorMessage = "Разрешены только номера.")]
        public string phonework { get; set; }

        [Required]
        [StringLength(18)]
        [RegularExpression(@"^\d+$", ErrorMessage = "Разрешены только номера.")]
        public string phonepersonal { get; set; }

        [Required]
        [StringLength(50)]
        [EmailAddress]
        public string email { get; set; }

        [Required]
        [StringLength(40)]
        public string schedule { get; set; }

        [Required]
        [Column(TypeName = "numeric(10, 2)")]
        [Range(0, double.MaxValue, ErrorMessage = "Заработная плата должна быть неотрицательной величиной!")]
        public decimal salary { get; set; }

        public string personalinfo { get; set; }
        [Required]
        public string documents { get; set; }
        public string workhistory { get; set; }
        public string skills { get; set; }
        public string specialfeatures { get; set; }

        [Required]
        [MinLength(6)]
        [StringLength(6)]
        [RegularExpression(@"^\d+$", ErrorMessage = "Разрешены только номера.")]
        public string passportnumber { get; set; }

        [Required]
        [MinLength(4)]
        [StringLength(4)]
        [RegularExpression(@"^\d+$", ErrorMessage = "Разрешены только номера.")]
        public string passportseries { get; set; }

        public virtual ICollection<Order> Order { get; set; }
        public virtual ICollection<useraccount> useraccount { get; set; }
    }
}
